---
- hosts: kube_master
  serial: 1
  remote_user: "{{ rmt_usr }}"
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Install DOCTL
      become: true
      ansible.builtin.shell: snap install doctl

    - name: Initialize authentication context with DO API token
      ansible.builtin.shell: doctl auth init -t {{ DO_API_TOKEN }}

    - name: Enable DOCTL integration with kubectl
      become: true
      ansible.builtin.shell: snap connect doctl:kube-config

    - name: Enable DOCTL integration with dot-docker interface
      become: true
      ansible.builtin.shell: snap connect doctl:dot-docker

    - name: Login to DO Container Registry using default authentication context
      ansible.builtin.shell: doctl registry login --expiry-seconds 180

    - name: Download DOCR secrets manifest to a file
      become: true
      ansible.builtin.shell: doctl registry kubernetes-manifest > {{ ansible_env.HOME }}/manifests/createRegistrySecrets.yaml
      args:
        creates: "{{ ansible_env.HOME }}/manifests/createRegistrySecrets.yaml"

    - name: Replace namespace for the secrets to "cl-app"
      ansible.builtin.replace:
        path: "{{ ansible_env.HOME }}/manifests/createRegistrySecrets.yaml"
        regexp: 'namespace: kube-system'
        replace: 'namespace: cl-app'
        backup: true 

    - name: Apply manifest to create secrets in "cl-app" namespace
      ansible.builtin.shell: kubectl apply -f {{ ansible_env.HOME }}/manifests/createRegistrySecrets.yaml

    - name: Set imagePullSecrets for the service account 
      ansible.builtin.shell:  |
        kubectl patch serviceaccount cl-app-admin -n cl-app -p '{"imagePullSecrets": [{"name": "registry-cl-container-registry"}]}'